[%#
form_macros_pre_process.tt

Here we place only macros which are used for building forms.

This file can be preprocessed by any application (cpanel, site etc... )
and hopefully only different stylesheets will be needed to make the 
look and feel of the widgets different.

You may add your own newly created complex widgets here.
You may use simple widgets to build more complex widgets.

%]
[% 

#Allow custom "form" to be passed to the STASH
form ||= c.req.params.to_hash;
%]
[% MACRO text_field(arg,params) BLOCK;
  name_and_id =  arg||params.name; 
  field_error = validator_errors.${name_and_id};
  params.value ||= form.${name_and_id};
  label = name_and_id.replace('[^\.]+\.','');
  name_and_id_help = params.help|| label _ '_help';
+%]
<!-- start [% name_and_id %]_unit -->
<div class="unit on-2 columns" id="[% name_and_id %]_unit">
    <div class="column span-2" style="[% field_error?'':'display:none;'%]" 
    id="[% name_and_id %]_error">
      <div class="container ui-state-error ui-corner-all ">[% field_error %]</div>
    </div>
    <div class="fixed column label" id="[% name_and_id _ '_label_column' %]">
      <label for="[% params.id || name_and_id %]" id="[% name_and_id _ '_label' %]">
        [% params.label|| c.l(label).ucfirst;
           params.required ? ':&#160;*' : ':';
        %]
      </label>
    </div>
    <div class="elastic column"  id="[% name_and_id _ '_field_column' %]">
      <div class="container field">
        <input type="text" class="textbox" id="[% params.id || name_and_id %]" 
        name="[% name_and_id %]" value="[% params.value %]"
        [% params.readonly ?' readonly="readonly" ':'' %] />
      </div>
    </div>
    <div class="column span-2">
      <div class="ui-state-default container help">
        [% c.textile(c.l(name_and_id_help)) %]
      </div>
    </div>
</div><!-- end [% name_and_id %]_unit -->
[%+ END %]

[% MACRO password_field(arg, params) BLOCK;
  name_and_id =  arg||params.name; 
  field_error = validator_errors.${name_and_id};
  label = name_and_id.replace('[^\.]+\.','');
  name_and_id_help = params.help|| label _ '_help';
+%]
<!-- start [%+ name_and_id %]_unit -->
<div class="unit on-2 columns" id="[% name_and_id %]_unit">
    <div class="column span-2" style="[% field_error?'':'display:none;'%]" 
    id="[% name_and_id %]_error">
      <div class="container ui-state-error ui-corner-all">[% field_error %]</div>
    </div>
    <div class="fixed column label" id="[% name_and_id _ '_label_column' %]">
      <label for="[% params.id || name_and_id %]" id="[% name_and_id _ '_label' %]">
        [% params.label|| c.l(label).ucfirst;
           params.required ? ':&#160;*' : ':';
        %]
      </label>
    </div>
    <div class="elastic column ">
      <div class="container field">
        <input type="password" class="textbox" id="[% params.id || name_and_id %]" 
        name="[% name_and_id %]" />
      </div>
    </div>
    <div class="column span-2">
      <div class="ui-state-default container help">[% c.textile(c.l(name_and_id_help)) %]</div>
    </div>
</div><!-- end [%+ name_and_id %]_unit -->
[%+ END %]

[% MACRO file_field(arg,params) BLOCK;
  name_and_id =  arg||params.name; 
  field_error = validator_errors.${name_and_id};
  label = name_and_id.replace('[^\.]+\.','');
  name_and_id_help = params.help|| label _ '_help';
+%]
<!-- start [%+ name_and_id %]_unit -->
<div class="unit on-2 columns" id="[% name_and_id %]_unit">
    <div class="column span-2" style="[% field_error?'':'display:none;'%]" 
    id="[% name_and_id %]_error">
      <div class="container ui-state-error ui-corner-all ">[% field_error %]</div>
    </div>
    <div class="fixed column label" id="[% name_and_id _ '_label_column' %]">
      <label for="[% params.id || name_and_id %]">
              [% params.label || c.l(label).ucfirst %]
              [% params.required ? ':&#160;*' : ':' %]
      </label>
    </div>
    <div class="elastic column ">
      <div class="container field">
        <input type="file" id="[% name_and_id %]" 
        name="[% name_and_id %]" />
      </div>
    </div>
    <div class="column span-2">
      <div class="ui-state-default container help">
        [% c.textile(c.l(name_and_id_help)) %]
      </div>
    </div>
</div><!-- end [%+ name_and_id %]_unit -->
[%+ END %]

[% MACRO select_field(arg,params) BLOCK;
  name_and_id =  arg||params.name; 
  field_error = validator_errors.${name_and_id};
  params.selected ||= form.${name_and_id};
  label = name_and_id.replace('[^\.]+\.','');
  name_and_id_help = params.help || label _ '_help';
+%]
<!-- start [%+ name_and_id %]_unit -->
<div class="unit on-2 columns" id="[% name_and_id %]_unit">
    <div class="column span-2" style="[% field_error?'':'display:none;'%]" 
        id="[% name_and_id %]_error">
      <div class="container ui-state-error ui-corner-all ">[% field_error %]</div>
    </div>
    <div class="fixed column label" id="[% name_and_id _ '_label_column' %]">
      <label for="[% params.id || name_and_id %]">
              [% params.label|| c.l(label).ucfirst%]
              [% params.required ? ':&#160;*' : ':' %]
      </label>
    </div>
    <div class="elastic column"><div class="container field">
        <select  id="[% params.id || name_and_id %]" name="[% name_and_id %]"
        [% params.readonly? ' readonly="readonly"':'' %]>
            [% FOR row IN params.options %]
            <option [%+ params.selected eq row.value ? ' selected="selected"' : '' +%]
                [%+ row.disabled ? '  disabled="disabled"' : '' +%]
                value="[% row.value %]">[% c.l(row.label || row.value).xml %]</option>
            [% END %]
        </select></div>
    </div>
    <div class="column span-2">
      <div class="ui-state-default container help">
        [% c.textile(c.textile(c.l(name_and_id_help))) %]
      </div>
    </div>
</div><!-- end [%+ name_and_id %]_unit -->
[%+ END %]

[%MACRO textarea(arg,params) BLOCK;
  name_and_id =  arg||params.name; 
  field_error = validator_errors.${name_and_id};
  params.value ||= form.${name_and_id};
  label = name_and_id.replace('[^\.]+\.','');
  name_and_id_help = params.help|| label _ '_help';
+%]
<!-- start [%+ name_and_id %]_unit -->
<div class="unit on-2 columns" id="[% name_and_id %]_unit">
    <div class="column span-2" style="[% field_error?'':'display:none;'%]" 
    id="[% name_and_id %]_error">
      <div class="container ui-state-error ui-corner-all ">[% field_error %]</div>
    </div>
    <div class="fixed column label" id="[% name_and_id _ '_label_column' %]">
      <label for="[% params.id || name_and_id %]" id="[% name_and_id _ '_label' %]">
        [% params.label|| c.l(label).ucfirst %]
        [% params.required ? ':&#160;*' : ':' %]
      </label>
    </div>
    <div class="elastic column " id="[% name_and_id _ '_field_column' %]"><div class="container field">
      <textarea id="[% params.id || name_and_id %]" name="[% name_and_id %]" class="textarea" 
        style="height:[% params.height||'100px' %];width:100%;" >
        [% params.value %]</textarea>
    </div></div>
    <div class="column span-2">
      <div class="ui-state-default container help">
        [% c.textile(c.l(name_and_id_help)) %]
      </div>
    </div>
</div><!-- end [%+ name_and_id %]_unit -->
[%+ END %]
[%MACRO checkbox_field(arg,params) BLOCK;
  name_and_id =  arg||params.name; 
  field_error = validator_errors.${name_and_id};
  params.value ||= form.${name_and_id};
  label = name_and_id.replace('[^\.]+\.','');
  name_and_id_help = params.help || label _ '_help';
+%]
<!-- start [%+ name_and_id %]_unit -->
<div class="unit on-2 columns" id="[% name_and_id %]_unit">
    <div class="column" style="[% field_error?'':'display:none;'%]" 
    id="[% name_and_id %]_error">
      <div class="container ui-state-error ui-corner-all ">[% field_error %]</div>
    </div>
    <div class="fixed column label" id="[% name_and_id _ '_label_column' %]">&#160;
    <input type="checkbox" class="checkbox"
    [% params.value ? ' checked="checked" ' : ' ' %]
    id="[% name_and_id %]" name="[% name_and_id %]" value="1" />
    <label for="[% params.id || name_and_id %]" id="[% name_and_id _ '_label' %]" 
    style="display: inline-block;">                                                 
      [% params.label|| c.l(label).ucfirst %]
      [% params.required ? '&#160;*' : '' %]
    </label>
    </div>
    <div class="column span-2">
      <div class="ui-state-default container help">
        [% c.textile(c.l(name_and_id_help)) %]
      </div>
    </div>    
</div><!-- end [%+ name_and_id %]_unit -->
[%+ END %]

[% MACRO hidden_field(arg,params) BLOCK;
name_and_id =  arg||params.name;
params.value ||= form.${name_and_id};
+%]
<input type="hidden" id="[% params.id||name_and_id%]" 
name="[% name_and_id %]" value="[% params.value %]" />
[% END %]
[% MACRO button_set() BLOCK; +%]
<!-- start [%+ name_and_id %]_unit -->
<div class="unit" id="buttons_unit">
  <div class="container buttons">
    <button type="submit" name="save">[% c.l('Save') %]</button>
    <button type="submit" name="save_and_close">[% c.l('Save and close') %]</button>
    <button type="reset">[% c.l('Reset') %]</button>
  </div>
</div><!-- end [%+ name_and_id %]_unit -->
[%+ END %]

